# name: test/sql/types/struct/unnest_column_names.test
# description: Test the retantion of column names when doing recursive unnest
# group: [struct]

statement ok
PRAGMA enable_verification

query II
SELECT unnest([{'a':{ 'aa': 42}, 'b':{'bb': 84}}], recursive := true, keep_parent_names := true);
----
42	84

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a':{ 'aa': 42}, 'b':{'bb':  84}}], recursive := true, keep_parent_names := true);

query ITTTTT
PRAGMA table_info('test')
----
0	a.aa	INTEGER	0	NULL	0
1	b.bb	INTEGER	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a':{ 'aa': {'aaa': 42}}, 'b':{'bb':  84}}], recursive := true, keep_parent_names := true);

query ITTTTT
PRAGMA table_info('test')
----
0	a.aa.aaa	INTEGER	0	NULL	0
1	b.bb	INTEGER	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a': 12, 'b': {'bb': {'bbb': 12}}}], recursive := true, keep_parent_names := true);

query ITTTTT
PRAGMA table_info('test')
----
0	a	INTEGER	0	NULL	0
1	b.bb.bbb	INTEGER	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a': 12, 'b': {'bb': {'bbb': 12}}}], recursive := true, keep_parent_names := false);

query ITTTTT
PRAGMA table_info('test')
----
0	a	INTEGER	0	NULL	0
1	bbb	INTEGER	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a': 12, 'b': {'bb': {'bbb': 12}}}], recursive := true, max_depth := 3, keep_parent_names := true);

query ITTTTT
PRAGMA table_info('test')
----
0	a	INTEGER	0	NULL	0
1	b.bb	STRUCT(bbb INTEGER)	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a': 12, 'b': {'bb': {'bbb': 12}}}], recursive := true, max_depth := 2, keep_parent_names := true);

query ITTTTT
PRAGMA table_info('test')
----
0	a	INTEGER	0	NULL	0
1	b	STRUCT(bb STRUCT(bbb INTEGER))	0	NULL	0

statement ok
CREATE OR REPLACE TABLE test AS SELECT unnest([{'a': 12, 'b': {'bb': {'bbb': 12}}}], max_depth := 3);

query ITTTTT
PRAGMA table_info('test')
----
0	a	INTEGER	0	NULL	0
1	bb	STRUCT(bbb INTEGER)	0	NULL	0