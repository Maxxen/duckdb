{
  "description": "Test PEG Parser + transformer in strict mode",
  "skip_compiled": "true",
  "on_init": "set allow_parser_override_extension=strict_when_supported;",
  "statically_loaded_extensions": [
    "core_functions",
    "autocomplete"
  ],
  "skip_tests": [
    {
      "reason": "Multi-statement containing unimplemented statementType",
      "paths": [
        "test/sql/delete/test_segment_deletes.test"
      ]
    },
    {
      "reason": "Parser exception because of dollar-quoted strings",
      "paths": [
        "test/sql/peg_parser/parser/create_macro.test",
        "test/sql/peg_parser/parser/show_table.test",
        "test/sql/peg_parser/parser/prepare_statement.test",
        "test/sql/peg_parser/parser/support_try.test",
        "test/sql/peg_parser/parser/nested_join.test",
        "test/sql/peg_parser/parser/pivot_statement.test",
        "test/sql/peg_parser/parser/on_conflict.test",
        "test/sql/peg_parser/parser/select_star.test",
        "test/sql/peg_parser/parser/invisible_space.test",
        "test/sql/peg_parser/parser/array_subquery.test",
        "test/sql/peg_parser/parser/update_statement.test",
        "test/sql/peg_parser/parser/use_statement.test",
        "test/sql/peg_parser/parser/dotted_functions.test",
        "test/sql/peg_parser/parser/attach_or_replace.test",
        "test/sql/peg_parser/parser/load_extension.test",
        "test/sql/peg_parser/parser/delete_from.test",
        "test/sql/peg_parser/parser/create_type.test",
        "test/sql/peg_parser/parser/alter.test",
        "test/sql/peg_parser/parser/with_ordinality.test",
        "test/sql/peg_parser/parser/recursive.test",
        "test/sql/peg_parser/parser/analyze_vacuum.test",
        "test/sql/peg_parser/parser/index.test",
        "test/sql/peg_parser/parser/type.test",
        "test/sql/peg_parser/parser/empty_map.test",
        "test/sql/peg_parser/parser/copy_expression.test",
        "test/sql/peg_parser/parser/colon_alias.test",
        "test/sql/peg_parser/parser/lambda_functions.test",
        "test/sql/peg_parser/parser/collate.test",
        "test/sql/peg_parser/parser/support_unreserved_keywords.test",
        "test/sql/peg_parser/parser/list_slices.test",
        "test/sql/peg_parser/parser/struct_identifier.test",
        "test/sql/peg_parser/parser/map.test",
        "test/sql/peg_parser/parser/ignore_nulls.test",
        "test/sql/peg_parser/parser/insert.test",
        "test/sql/peg_parser/parser/dollar_quoted.test",
        "test/sql/peg_parser/parser/support_optional_not_null_constraint.test",
        "test/sql/peg_parser/parser/window_function.test",
        "test/sql/peg_parser/parser/create_table.test",
        "test/sql/peg_parser/parser/sample.test",
        "test/sql/peg_parser/parser/merge_into.test"
      ]
    },
    {
      "reason": "Quotations",
      "paths": [
        "test/sql/pragma/test_show_tables_from.test",
        "test/sql/attach/attach_dbname_quotes.test"
      ]
    },
    {
      "reason": "Arithmetic expression",
      "paths": [
        "test/sql/function/operator/test_arithmetic_sqllogic.test",
        "test/sql/projection/test_row_id_expression.test",
        "test/sql/function/numeric/test_trigo.test",
        "test/sql/function/generic/test_between.test"
      ]
    },
    {
      "reason": "Timeout",
      "paths": [
        "test/sql/storage/encryption/temp_files/encrypted_offloading_block_files.test_slow",
        "test/sql/storage/temp_directory/offloading_block_files.test_slow"
      ]
    },
    {
      "reason": "Setting option to 'strict' changes behavior of first tests",
      "paths": [
        "test/extension/loadable_parser_override.test",
        "test/sql/peg_parser/transformer/peg_transformer.test"
      ]
    }
  ]
}